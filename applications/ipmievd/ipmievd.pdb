<patterndb version='4' pub_date='2013-08-20'>

<ruleset name='ipmievd' id='57dc2b9d-d518-4e2b-a2c6-502c1d241765'>
	<patterns>
		<pattern>ipmievd</pattern>
	</patterns>
	<rules>
		<!-- SDR_RECORD_TYPE_COMPACT_SENSOR -->
		<!-- ipmievd.c: lprintf(LOG_NOTICE, "%s%s sensor %s - %s %s", eintf->prefix, type, sdr->record.compact->id_string, desc ? : "", evt->sel_type.standard_type.event_dir ? "Deasserted" : "Asserted"); -->
		<rule provider="wernli@in2p3.fr" id='2487c339-e303-494c-80f6-1ee6969ef0c9'
			class='hardware'
			context-id="ipmievd-$(sha1 --length 12 $type $target $desc)"
			context-timeout="10"
			context-scope="process">
			<patterns>
				<pattern>@ESTRING:type: sensor@ @ESTRING:target: -@ @ESTRING:desc: Asserted@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>Battery sensor CMOS Battery - Failed Asserted</test_message>
					<test_values>
						<test_value name="type">Battery</test_value>
						<test_value name="target">CMOS Battery</test_value>
						<test_value name="desc">Failed</test_value>
					</test_values>
				</example>
			</examples>
			<values>
				<value name="status">Asserted</value>
				<value name=".classifier.context-id">$CONTEXT_ID</value>
			</values>
			<actions>
				<action trigger='timeout'>
					<message inherit-properties="TRUE">
						<tags>
							<tag>alert</tag><tag>hardware</tag>
						</tags>
					</message>
				</action>
			</actions>
		</rule>
		<rule provider="wernli@in2p3.fr" id='18820eb4-2fec-4e8a-9840-245d37d9d589'
			class='hardware'
			context-id="ipmievd-$(sha1 --length 12 $type $target $desc)"
			context-scope="process">
			<patterns>
				<pattern>@ESTRING:type: sensor@ @ESTRING:target: -@ @ESTRING:desc: Deasserted@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>Battery sensor ROMB Battery - Failed Deasserted</test_message>
					<test_values>
						<test_value name="type">Battery</test_value>
						<test_value name="target">ROMB Battery</test_value>
						<test_value name="desc">Failed</test_value>
					</test_values>
				</example>
			</examples>
			<values>
				<value name="status">Deasserted</value>
				<value name=".classifier.context-id">$CONTEXT_ID</value>
			</values>
		</rule>
		<!-- ipmievd.c: lprintf(LOG_NOTICE, "%s%s sensor %s - %s", eintf->prefix, type, sdr->record.compact->id_string, desc ? : "");  -->
		<rule provider="wernli@in2p3.fr" id='5231f32c-dbe5-42b4-a558-4ec3542ffc31'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>@ESTRING:type: sensor@ @ESTRING:target: -@ @ANYSTRING:status@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>Memory sensor Mem ECC Warning - Transition to Critical from less severe</test_message>
					<test_values>
						<test_value name="type">Memory</test_value>
						<test_value name="target">Mem ECC Warning</test_value>
						<test_value name="status">Transition to Critical from less severe</test_value>
					</test_values>
				</example>
			</examples>
			<tags>
				<tag>alert</tag><tag>hardware</tag>
			</tags>
		</rule>
		<!-- ipmievd.c: lprintf(LOG_NOTICE, "%s%s sensor - %s", eintf->prefix, type, desc); -->
		<rule provider="wernli@in2p3.fr" id='719bb724-f871-4872-9d85-b9c377aae608'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>@ESTRING:type: sensor@ - @ANYSTRING:desc@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>Temperature sensor - Upper Critical going high</test_message>
					<test_values>
						<test_value name="type">Temperature</test_value>
						<test_value name="desc">Upper Critical going high</test_value>
					</test_values>
				</example>
			</examples>
			<tags>
				<tag>alert</tag><tag>hardware</tag>
			</tags>
		</rule>
	<!-- SDR_RECORD_TYPE_FULL_SENSOR -->
	<!-- IPMI_EVENT_CLASS_THRESHOLD -->
	<!-- ipmievd.c: lprintf(LOG_NOTICE, "%s%s sensor %s %s (Reading %.*f %s Threshold %.*f %s)", ... -->
		<rule provider="wernli@in2p3.fr" id='31d3ac62-c7c6-44d7-b9aa-fa70399c1282'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>@ESTRING:type: sensor@ @ESTRING:target: (@@ESTRING:status:)@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>Fan sensor FCB FAN2 Lower Critical going low  (Reading 1500 &lt; Threshold 1500 RPM)</test_message>
					<test_values>
						<test_value name="type">Fan</test_value>
						<test_value name="target">FCB FAN2 Lower Critical going low </test_value>
						<test_value name="status">Reading 1500 &lt; Threshold 1500 RPM</test_value>
					</test_values>
				</example>
			</examples>
			<tags>
				<tag>alert</tag><tag>hardware</tag>
			</tags>
		</rule>
	<!-- lprintf(LOG_NOTICE, "%sIPMI Event OEM Record %02x", eintf->prefix, evt->record_type); -->
		<rule provider="wernli@in2p3.fr" id='9810d344-7d2f-4b93-8864-cb86f8d606d1'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>IPMI Event OEM Record @ANYSTRING:target@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>IPMI Event OEM Record c8</test_message>
					<test_values>
						<test_value name="target">c8</test_value>
					</test_values>
				</example>
			</examples>
			<values>
				<value name="type">OEM Record</value>
			</values>
		</rule>
		<!-- selwatch_check -->
		<rule provider="wernli@in2p3.fr" id='c63fdf10-7528-442a-9998-d75760800c8d'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>SEL overflow is cleared</pattern>
			</patterns>
			<values>
				<value name="target">SEL overflow</value>
				<value name="status">cleared</value>
			</values>
		</rule>
		<rule provider="wernli@in2p3.fr" id='5de23abb-d951-4ed6-99c7-078946280943'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>SEL buffer @ANYSTRING:status@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>SEL buffer is 868% full, please consider clearing the SEL buffer</test_message>
					<test_values>
						<test_value name="status">is 868% full, please consider clearing the SEL buffer</test_value>
					</test_values>
				</example>
			</examples>
			<values>
				<value name="target">SEL buffer</value>
			</values>
		</rule>
		<rule provider="wernli@in2p3.fr" id='bfed5178-23b3-4533-bc42-af561dda55a5'
			class='hardware'
			context-id="ipmievd"
			context-scope="process">
			<patterns>
				<pattern>SEL count @ANYSTRING:status@</pattern>
			</patterns>
			<examples>
				<example>
					<test_message program='ipmievd'>SEL count is 0 (old=127), resetting lastid to 0</test_message>
					<test_values>
						<test_value name="status">is 0 (old=127), resetting lastid to 0</test_value>
					</test_values>
				</example>
			</examples>
			<values>
				<value name="target">SEL count</value>
			</values>
		</rule>

		<!-- TODO
				 correlate the following:
				 <local4.notice> ipmievd: Power Supply sensor PS Redundancy - Redundancy Lost
				 <local4.notice> ipmievd: Power Supply sensor PS Redundancy - Fully Redundant
		-->
</rules>

</ruleset>

</patterndb>

<!-- vim:ft=xml:background=dark
		 -->
